generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String @id @default(cuid())
  name       String 
  email      String @unique
  password   String 
  role       Role   @default(CUIDADOR)
  creatures  Creature[]

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  Account Account[]

  Session Session[]
}

enum Role {
  CUIDADOR
  MAESTRO
}

model Creature {
  id         String @id @default(cuid())
  name       String 
  type       CreatureType
  power      Int 
  trained    Boolean @default(false)

  userId     String
  user       User @relation(fields: [userId], references: [id])

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt  
}

enum CreatureType {
  DRAGON
  PHOENIX
  GOLEM
  VAMPIRE
  UNICORN
}

model Account {
  id                String @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_hype        String?
  scope             String?
  id_token          String?
  session_state     String?

  user              User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id                String @id @default(cuid())
  sessionToken      String @unique
  userId            String
  expires           DateTime

  user              User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  id      String 
  token   String @unique
  expires DateTime

  @@unique([id, token])
}